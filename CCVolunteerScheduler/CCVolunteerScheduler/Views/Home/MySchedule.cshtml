@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "MySchedule";
}

@section navbar {
    <div class="row container">
        <div class="col-xs-12 col-md-12">
            <nav class="navbar navbar-toggleable-md navbar-inverse bg-inverse">
                <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <a class="navbar-brand headerSpacing" href="#"></a>
                <div class="collapse navbar-collapse" id="navbarSupportedContent">
                    <ul class="navbar-nav mr-auto">
                        <li class="nav-item">
                            @Html.ActionLink("Manage Account", "ManageAccount", "Home", new { @class = "nav-link" })<span class="sr-only">(current)</span></a>
                        </li>
                        <li class="nav-item">
                            @Html.ActionLink("View Calendar", "VolunteerCalendar", "Home", new { @class = "nav-link" })<span class="sr-only">(current)</span></a>
                        </li>
                        <li class="nav-item  active">
                            @Html.ActionLink("My Schedule", "MySchedule", "Home", new { @class = "nav-link" })<span class="sr-only">(current)</span></a>
                        </li>
                    </ul>
                </div>
            </nav>
        </div>
    </div>
}
<br />
<br />
<br />

<div class="col-xs-12 col-md-12">
    <h2>Your Upcoming Events</h2>
</div>
<center>
    <div class="table-responsive">
        <table class="calendar">
            <thead>
                <tr>
                    <th colspan="7" class="txt-center"><h2>@DateTime.Now.ToString("MMMMMMMMMMMMM")</h2></th>
                </tr>
            </thead>
            <tbody>
                <tr class="txt-center mobile-row">
                    <td><h6>Sunday</h6></td>
                    <td><h6>Monday</h6></td>
                    <td><h6>Tuesday</h6></td>
                    <td><h6>Wednesday</h6></td>
                    <td><h6>Thursday</h6></td>
                    <td><h6>Friday</h6></td>
                    <td><h6>Saturday</h6></td>
                </tr>
                <tr class="txt-center desktop-row">
                    <td><h6>S</h6></td>
                    <td><h6>M</h6></td>
                    <td><h6>T</h6></td>
                    <td><h6>W</h6></td>
                    <td><h6>T</h6></td>
                    <td><h6>F</h6></td>
                    <td><h6>S</h6></td>
                </tr>
                @{
                    var curDay = new DateTime(Model.StartDate.Year, Model.StartDate.Month, 1);
                    var lastDay = new DateTime(Model.StartDate.Year, Model.StartDate.Month, DateTime.DaysInMonth(Model.StartDate.Year, Model.StartDate.Month));

                    int daysToAdd = (int)curDay.DayOfWeek;
                    if (daysToAdd > 0)
                    {
                        <tr>
                            @for (int i = daysToAdd; i > 0; i--)
                            {
                                if (DateTime.Compare(curDay.AddDays(-i).Date, DateTime.Today) == 0)
                                {
                                    <td class="calendar-day cell-active">@curDay.AddDays(-i).ToString("dd") </td>
                                }
                                else
                                {
                                    <td class="calendar-day cell-inactive">@curDay.AddDays(-i).ToString("dd") </td>
                                }

                            }
                            @for (int i = 0; i < Model.NumberOfDays - daysToAdd; i++)
                            {
                                if (DateTime.Compare(curDay.AddDays(i).Date, DateTime.Today) == 0)
                                {
                                    <td class="calendar-day cell-active">@curDay.AddDays(i).ToString("dd") </td>
                                }
                                else
                                {
                                    <td class="calendar-day cell-inactive">@curDay.AddDays(i).ToString("dd") </td>
                                }
                            }
                        </tr>
                        curDay = curDay.AddDays(Model.NumberOfDays - daysToAdd);
                    }
                    for (int i = 0; i < Model.NumberOfDays; i++)
                    {
                        if (curDay.CompareTo(lastDay) <= 0)
                        {
                            <tr>
                                @for (int j = 0; j < Model.NumberOfDays; j++)
                                {
                                    if (DateTime.Compare(curDay.AddDays(j).Date, DateTime.Today) == 0)
                                    {
                                        <td class="calendar-day cell-active">@curDay.AddDays(j).ToString("dd") </td>
                                    }
                                    else
                                    {
                                        <td class="calendar-day cell-inactive">@curDay.AddDays(j).ToString("dd") </td>
                                    }
                                }
                            </tr>

                            curDay = curDay.AddDays(Model.NumberOfDays);
                        }
                    }
                }
            </tbody>
        </table>
    </div>
    <br />
    <!-- Trigger the modal with a button -->
    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#AddEventModal">Add Event</button>
</center>
<br />