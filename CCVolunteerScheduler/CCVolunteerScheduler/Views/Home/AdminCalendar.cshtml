@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "AdminCalendar";
}


@section navbar {
    <nav class="navbar navbar-toggleable-md navbar-inverse bg-inverse rounded">
        <button class="navbar-toggler navbar-toggler-right" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <a class="navbar-brand headerSpacing" href="#"></a>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item">
                    @Html.ActionLink("Home", "AdminHome", "Home", new { @class = "nav-link" })<span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item active">
                    @Html.ActionLink("Calendar", "AdminCalendar", "Home", new { @class = "nav-link" })<span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    @Html.ActionLink("Communications", "Communications", "Home", new { @class = "nav-link" })<span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item">
                    @Html.ActionLink("Volunteers", "Volunteers", "Home", new { @class = "nav-link" })<span class="sr-only">(current)</span></a>
                </li>
            </ul>
        </div>
    </nav>
}
<br />
<center>
    <div class="table-responsive">
        @using (Html.BeginForm("AdminCalendar", "Home"))
    {
        <input type="submit" name="requestedDate" value="Back One Month" id="backOne" class="btn btn-info" />
        <input type="submit" name="requestedDate" value="Forward One Month" id="forwardOne" class="btn btn-info" />
        <input type="hidden" name="userMonth" value="@Model.Month.ToString("MMMMMMMMMMMMM")" id="userMonth" />
        <input type="hidden" name="userYear" value="@Model.Month.ToString("yyyy")" id="userYear" />
}
        <table class="calendar">
            <thead>
                <tr>
                    <th colspan="7" class="txt-center"><h2>@Model.Month.ToString("MMMMMMMMMMMMM yyyy")</h2></th>
                </tr>
            </thead>
            <tbody>
                <tr class="txt-center mobile-row">
                    <td><h6>Sunday</h6></td>
                    <td><h6>Monday</h6></td>
                    <td><h6>Tuesday</h6></td>
                    <td><h6>Wednesday</h6></td>
                    <td><h6>Thursday</h6></td>
                    <td><h6>Friday</h6></td>
                    <td><h6>Saturday</h6></td>
                </tr>
                <tr class="txt-center desktop-row">
                    <td><h6>S</h6></td>
                    <td><h6>M</h6></td>
                    <td><h6>T</h6></td>
                    <td><h6>W</h6></td>
                    <td><h6>T</h6></td>
                    <td><h6>F</h6></td>
                    <td><h6>S</h6></td>
                </tr>
                @{
                var curDay = new DateTime(Model.StartDate.Year, Model.StartDate.Month, 1);
                var lastDay = new DateTime(Model.StartDate.Year, Model.StartDate.Month, DateTime.DaysInMonth(Model.StartDate.Year, Model.StartDate.Month));

                int daysToAdd = (int)curDay.DayOfWeek;
                if (daysToAdd > 0)
                {
                    <tr>
                        @for (int i = daysToAdd; i > 0; i--)
                    {
                        <td class="calendar-day cell-inactive">
                            @curDay.AddDays(-i).ToString("dd")

                    </td>

            }
                        @for (int i = 0; i < Model.NumberOfDays - daysToAdd; i++)
                    {
                        <td class="calendar-day cell-inactive">
                            <div id="@("date" + curDay.AddDays(i).ToString("dd"))">
                                @curDay.AddDays(i).ToString("dd")
                                @*PartialView*@
                            </div>
                        </td>
                }
                    </tr>
                curDay = curDay.AddDays(Model.NumberOfDays - daysToAdd);
            }
            for (int i = 0; i < Model.NumberOfDays; i++)
            {
                if (curDay.CompareTo(lastDay) <= 0)
                {
                    <tr>
                        @for (int j = 0; j < Model.NumberOfDays; j++)
                    {

                        <td class="calendar-day cell-inactive" id="@("date" + curDay.AddDays(j).ToString("dd"))">
                            @curDay.AddDays(j).ToString("dd")
                            @*PartialView*@
                        </td>
                }
                    </tr>

                curDay = curDay.AddDays(Model.NumberOfDays);
            }
        }
                }
            </tbody>
        </table>
    </div>
    <br />
    <!-- Trigger the modal with a button -->
    <button type="button" class="btn btn-info" data-toggle="modal" data-target="#AddEventModal">Add Event</button>
</center>
<br />

<!-- Modal -->
<div id="AddEventModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add Event</h4>
            </div>
            <div class="modal-body">
                <form>
                    <div class="form-group">
                        <label for="eventTitle">Event Title</label>
                        <input type="text" class="form-control" id="eventTitle" name="eventTitle"/>
                        <br />

                        <label for="eventDesc">Event Description</label>
                        <textarea class="form-control" rows="3" id="eventDesc" name="eventDesc"></textarea>
                        <br />

                        <label for="datepicker">Event Date</label>
                        <input id="datepicker" width="276" />
                        <script>
                            $('#datepicker').datepicker({
                                uiLibrary: 'bootstrap4',
                                format: "yyyy-mm-dd"
                            });
                        </script>
                        <br />

                        <small id="eventTimeDesc" class="form-text text-muted">Please format times as follows: HH:MM (6:00 for 6:00 AM or 18:00 for 6:00 PM)</small>
                        <label for="eventStart">Start Time</label>
                        <input type="text" class="form-control" id="eventStart" name="eventStart"/>
                        <br />

                        <label for="eventEnd">End Time</label>
                        <input type="text" class="form-control" id="eventEnd" name="eventEnd"/>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-info" data-dismiss="modal" onclick="AddEvent(eventTitle.value, eventDesc.value, $('#datepicker').val(), eventStart.value, eventEnd.value)">Save</button>
            </div>
        </div>
    </div>
</div>

@if(Model.StartDate.Month == DateTime.Now.Month && Model.StartDate.Year == DateTime.Now.Year){
            <script>document.getElementById("@("date" + DateTime.Today.ToString("dd"))").classList = "calendar-day cell-active";</script>
}

<!-- used for getting events for a day -->
<script type="text/javascript">
    function getEvents(currentDay) {
        jQuery.noConflict();
        (function ($) {
            var myDay = "" + @Model.StartDate.ToString("yyyy") + "-";
            var month = @Model.StartDate.ToString("MM") + 0;
            if (month < 10) {
                myDay += "0";
            }
            myDay += + @Model.StartDate.ToString("MM") + "-" + currentDay;

            var myID = 'date' + currentDay;
            $.ajax({
                type: "Get",
                url: '@Url.Action("AdminEventsForDay", "home")',
                data: { day: myDay },
                success: function (data) {
                    if (data.trim()!='') {
                        document.getElementById(myID).innerHTML += data;
                    }
                }
            })
        })(jQuery);
    }
</script>
<script type="text/javascript">
    function getAllEvents() {
        for (var i = 1; i < 10; i++) {
            getEvents("0" + i);
        }
        for(var i = 10; i < 32; i++ ){
            getEvents(i);
        }
    }
</script>

<!-- for populating events on calendar -->                                                        
<script type="text/javascript">
    window.onload = function () {
        getAllEvents();
    }
</script>     

<!-- Modal -->
<div id="CopyEventModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <!-- Modal content-->
        <div class="modal-content" id="Preview">
            @*PartialView*@
        </div>
    </div>
</div>

<script type="text/javascript">
    function Open(currentId) {
        jQuery.noConflict();
        (function ($) {
            $.ajax({
                type: "Get",
                url: '@Url.Action("GetEventDetail", "home")',
                data: { id: currentId },
                success: function (data) {
                    $('#Preview').html(data);
                }
            })
        })(jQuery);
    }
</script>

<!-- add event --->
<script type="text/javascript">
    function AddEvent(eventTitle, eventDesc, eventDate, eventStart, eventEnd) {
        jQuery.noConflict();
        (function ($) {
            $.ajax({
                type: "Get",
                url: '@Url.Action("AddEvent", "home")?title=' + eventTitle + '&description=' + eventDesc + '&date=' + eventDate + '&start=' + eventStart + '&end=' + eventEnd,
                success: function () {
                    //refresh page after event is added
                    location.reload();
                }
            })
        })(jQuery);
    }
</script>

<!-- update event --->
<script type="text/javascript">
    function UpdateEvent(eventID, eventTitle, eventDesc, eventDate, eventStart, eventEnd) {
        jQuery.noConflict();
        (function ($) {
            $.ajax({
                type: "Get",
                url: '@Url.Action("UpdateEvent", "home")?id=' + eventID + '&title=' + eventTitle + '&description=' + eventDesc + '&date=' + eventDate + '&start=' + eventStart + '&end=' + eventEnd,
                success: function () {
                    //refresh page after event is updated
                    location.reload();
                }
            })
        })(jQuery);
    }
</script>

<!-- delete event --->
<script type="text/javascript">
    function DeleteEvent(eventID) {
        jQuery.noConflict();
        (function ($) {
            $.ajax({
                type: "Get",
                url: '@Url.Action("DeleteEvent", "home")?id=' + eventID,
                success: function () {
                    //refresh page after event is deleted
                    location.reload();
                }
            })
        })(jQuery);
    }
</script>

<script>
    function ToggleDescription(eventID) {
        var myID = "event" + eventID;
        var description = document.getElementById(myID);
        if (description.classList.contains("hide")) {
            description.classList.remove("hide");
            description.classList.add("show");
        }
        else {
            description.classList.remove("show");
            description.classList.add("hide");
        }
    }
</script>