//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CCVolunteerScheduler.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class UpdateVolunteer : DbContext
    {
        public UpdateVolunteer()
            : base("name=UpdateVolunteer")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
    
        public virtual int Update_Volunteer(Nullable<int> userID, string firstName, string lastName, string phone, string email, Nullable<bool> activeStatus, Nullable<int> hoursWorked, string volunteerRole)
        {
            var userIDParameter = userID.HasValue ?
                new ObjectParameter("UserID", userID) :
                new ObjectParameter("UserID", typeof(int));
    
            var firstNameParameter = firstName != null ?
                new ObjectParameter("FirstName", firstName) :
                new ObjectParameter("FirstName", typeof(string));
    
            var lastNameParameter = lastName != null ?
                new ObjectParameter("LastName", lastName) :
                new ObjectParameter("LastName", typeof(string));
    
            var phoneParameter = phone != null ?
                new ObjectParameter("Phone", phone) :
                new ObjectParameter("Phone", typeof(string));
    
            var emailParameter = email != null ?
                new ObjectParameter("Email", email) :
                new ObjectParameter("Email", typeof(string));
    
            var activeStatusParameter = activeStatus.HasValue ?
                new ObjectParameter("ActiveStatus", activeStatus) :
                new ObjectParameter("ActiveStatus", typeof(bool));
    
            var hoursWorkedParameter = hoursWorked.HasValue ?
                new ObjectParameter("HoursWorked", hoursWorked) :
                new ObjectParameter("HoursWorked", typeof(int));
    
            var volunteerRoleParameter = volunteerRole != null ?
                new ObjectParameter("VolunteerRole", volunteerRole) :
                new ObjectParameter("VolunteerRole", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Volunteer", userIDParameter, firstNameParameter, lastNameParameter, phoneParameter, emailParameter, activeStatusParameter, hoursWorkedParameter, volunteerRoleParameter);
        }
    }
}
