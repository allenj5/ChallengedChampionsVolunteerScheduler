

//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace CCVolunteerScheduler.Models
{

using System;
using System.Data.Entity;
using System.Data.Entity.Infrastructure;

using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;


public partial class VolunteersDBEntities : DbContext
{
    public VolunteersDBEntities()
        : base("name=VolunteersDBEntities")
    {

    }

    protected override void OnModelCreating(DbModelBuilder modelBuilder)
    {
        throw new UnintentionalCodeFirstException();
    }


    public DbSet<Event> Events { get; set; }

    public DbSet<Volunteer> Volunteers { get; set; }


    public virtual ObjectResult<string> Validate_User(Nullable<long> userID, string password)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(long));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Validate_User", userIDParameter, passwordParameter);
    }


    public virtual ObjectResult<string> ValidateUser(Nullable<long> userID, string password)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(long));


        var passwordParameter = password != null ?
            new ObjectParameter("Password", password) :
            new ObjectParameter("Password", typeof(string));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("ValidateUser", userIDParameter, passwordParameter);
    }


    public virtual ObjectResult<string> Check_Admin(Nullable<int> userID)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("Check_Admin", userIDParameter);
    }


    public virtual int Insert_Event(string event_Title, string event_Description, Nullable<System.DateTime> event_Date, Nullable<System.TimeSpan> start_Time, Nullable<System.TimeSpan> end_Time)
    {

        var event_TitleParameter = event_Title != null ?
            new ObjectParameter("Event_Title", event_Title) :
            new ObjectParameter("Event_Title", typeof(string));


        var event_DescriptionParameter = event_Description != null ?
            new ObjectParameter("Event_Description", event_Description) :
            new ObjectParameter("Event_Description", typeof(string));


        var event_DateParameter = event_Date.HasValue ?
            new ObjectParameter("Event_Date", event_Date) :
            new ObjectParameter("Event_Date", typeof(System.DateTime));


        var start_TimeParameter = start_Time.HasValue ?
            new ObjectParameter("Start_Time", start_Time) :
            new ObjectParameter("Start_Time", typeof(System.TimeSpan));


        var end_TimeParameter = end_Time.HasValue ?
            new ObjectParameter("End_Time", end_Time) :
            new ObjectParameter("End_Time", typeof(System.TimeSpan));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Insert_Event", event_TitleParameter, event_DescriptionParameter, event_DateParameter, start_TimeParameter, end_TimeParameter);
    }


    public virtual int Update_Volunteer(Nullable<int> userID, string firstName, string lastName, string phone, string email, Nullable<int> hoursWorked)
    {

        var userIDParameter = userID.HasValue ?
            new ObjectParameter("UserID", userID) :
            new ObjectParameter("UserID", typeof(int));


        var firstNameParameter = firstName != null ?
            new ObjectParameter("FirstName", firstName) :
            new ObjectParameter("FirstName", typeof(string));


        var lastNameParameter = lastName != null ?
            new ObjectParameter("LastName", lastName) :
            new ObjectParameter("LastName", typeof(string));


        var phoneParameter = phone != null ?
            new ObjectParameter("Phone", phone) :
            new ObjectParameter("Phone", typeof(string));


        var emailParameter = email != null ?
            new ObjectParameter("Email", email) :
            new ObjectParameter("Email", typeof(string));


        var hoursWorkedParameter = hoursWorked.HasValue ?
            new ObjectParameter("HoursWorked", hoursWorked) :
            new ObjectParameter("HoursWorked", typeof(int));


        return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Update_Volunteer", userIDParameter, firstNameParameter, lastNameParameter, phoneParameter, emailParameter, hoursWorkedParameter);
    }

}

}

